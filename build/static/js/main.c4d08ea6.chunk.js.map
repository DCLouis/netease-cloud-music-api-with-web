{"version":3,"sources":["header/brand.tsx","header/index.tsx","util/index.ts","store/index.ts","components/songList/index.tsx","components/recommend/index.tsx","components/top/index.tsx","components/search/result.tsx","components/search/index.tsx","util/hooks/debounce.ts","header/tabs.tsx","components/recommend/playList.tsx","components/play/progress.tsx","components/play/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Brand","className","HttpMethod","FixHeader","req","url","options","a","fetch","res","json","highlight","content","keyword","tagName","c","toLowerCase","k","includes","idx","indexOf","replaceStr","substr","length","replaceHtml","regExp","RegExp","replace","parsePath","path","pathList","split","parsePoiter","obj","poiter","Array","isArray","initState","loading","songInfo","sessionStorage","JSON","parse","reducer","state","action","type","info","Store","React","createContext","SongList","songs","showRate","rateMinLength","topRateMarked","artists","album","onSongClick","alias","dispatch","useContext","artistsPath","albumPath","aliasPath","onItemClick","item","artistsList","aliasList","name","join","id","songUrl","data","alert","Promise","all","lrcInfo","picUrl","al","lyric","lrc","setItem","stringify","window","location","hash","renderAuthorAlbum","str","map","i","albumObj","aliasObj","key","onClick","toString","padStart","renderRate","dangerouslySetInnerHTML","__html","useState","newSongs","setNewSongs","songsList","setSongsList","useEffect","fetchSongsList","result","fetchNewSongs","src","alt","playCount","toFixed","time","date","Date","month","getMonth","day","getDate","observedElementStyle","height","width","observerTarget","useRef","end","setEnd","songList","setSongList","setAllSongs","initObserver","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","currEnd","list","e","slice","current","observe","code","playlist","tracks","getSongList","ref","style","visible","hidden","display","SearchResult","config","setOffsetConfig","divRef","offset","limit","isScrollTrigger","isEnd","searchCount","setCount","searchBoxRef","text","setText","hotList","setHotList","isCompositionInput","setIsCompositionInput","suggest","setSuggest","isSearchTips","setIsSearchTips","isResultPage","setIsResultPage","searchText","setSearchText","setResult","historyList","setHistoryList","offsetConfig","debounceText","value","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","searchConfig","count","recordSearchHistory","songName","splice","unshift","clickItem","innerText","target","blur","clickHot","hots","getHotList","history","localStorage","getItem","getSeggest","allMatch","getResult","songCount","songListCount","handledSongs","handledResult","size","visibility","autoComplete","onChange","val","onCompositionStart","onCompositionEnd","onKeyUp","which","onBlur","onFocus","defaultValue","index","first","tabs","title","PlayList","setId","setRes","isFolded","setIsFolded","changeFold","playListId","prop","params","urlParams","URLSearchParams","get","parseHashParam","getDetail","backgroundImage","coverImgUrl","creator","avatarUrl","nickname","tags","description","Progress","percent","duration","onMouseOver","console","log","onMouseMove","Play","parsed","setParsed","imgClass","setImgClass","lastDeg","setLastDeg","audioTag","nextLrc","setDuration","setCurrent","scrollTranslate","setScrollTranslate","picStyle","paused","play","imgTag","document","querySelector","rollTag","eleTransform","getComputedStyle","transform","matrix","match","matrixParams","call","Number","deg","b","d","aa","Math","round","asin","PI","bb","acos","cc","dd","matrix2Deg","pause","undefined","trim","data-timeline","renderLyric","autoPlay","onCanPlay","dur","firstLrc","color","nextEle","nextElementSibling","onTimeUpdate","currentTime","nextLrcTime","getAttribute","ele","prevEle","previousElementSibling","offsetHeight","x","App","useReducer","page","setPage","jump","addEventListener","Provider","renderPage","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4d08ea6.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Brand() {\n  return <div className=\"brand\"></div>;\n}\n","import React from 'react';\nimport Brand from './brand';\n// import Tabs from './tabs';\n\nconst FixHeader = () => {\n  return (\n    <div className=\"fix-header\">\n      <Brand></Brand>\n      {/* <Tabs></Tabs> */}\n    </div>\n  );\n};\n\nexport default FixHeader;\n","export enum HttpMethod {\n  get = 'GET',\n  post = 'post',\n}\n\nexport const req = async (url: string, options?: RequestInit) => {\n  const res = await fetch(url, options);\n  return res.json();\n};\n\nexport const debounce = function(fn: Function, delay: number = 300) {\n  let timer: number | undefined;\n  return (...args: any[]) => {\n    if (timer) {\n      clearTimeout(timer);\n    }\n    timer = window.setTimeout(() => {\n      fn(...args);\n    }, delay);\n  };\n};\n\nexport const throttle = function(fn: Function, delay: number = 300) {\n  let timer: number | undefined;\n  return (...args: any[]) => {\n    if (!timer) {\n      timer = window.setTimeout(() => {\n        fn(...args);\n        timer = void 0;\n      }, delay);\n    }\n  };\n};\n\nexport const highlight = (\n  content: string,\n  keyword: string,\n  tagName: string = 'span',\n  className: string = 'highlight'\n): string => {\n  if (!content || !keyword) {\n    return '';\n  }\n  const c = content.toLowerCase();\n  const k = keyword.toLowerCase();\n  if (c.includes(k)) {\n    const idx = c.indexOf(k);\n    const replaceStr = content.substr(idx, keyword.length);\n    const replaceHtml = `<${tagName} class=\"${className}\">${replaceStr}</${tagName}>`;\n    const regExp = new RegExp(keyword, 'gi');\n    return content.replace(regExp, replaceHtml);\n  }\n  return content;\n};\n\nexport const parseHashParam = (prop: string): string => {\n  const { hash } = window.location;\n  const params = hash.split('?');\n  const urlParams = params[1] ? new URLSearchParams(params[1]) : null;\n  if (urlParams) {\n    return urlParams.get(prop) || '';\n  }\n  return '';\n};\n\n/**\n * 解析matrix矩阵，0°-360°，返回旋转角度\n * 当a=b||-a=b,0<=deg<=180\n * 当-a+b=180,180<=deg<=270\n * 当a+b=180,270<=deg<=360\n *\n * 当0<=deg<=180,deg=d;\n * 当180<deg<=270,deg=180+c;\n * 当270<deg<=360,deg=360-(c||d);\n */\nexport const matrix2Deg = (a: number, b: number, c: number, d: number) => {\n  var aa = Math.round((180 * Math.asin(a)) / Math.PI);\n  var bb = Math.round((180 * Math.acos(b)) / Math.PI);\n  var cc = Math.round((180 * Math.asin(c)) / Math.PI);\n  var dd = Math.round((180 * Math.acos(d)) / Math.PI);\n  var deg = 0;\n  if (aa === bb || -aa === bb) {\n    deg = dd;\n  } else if (-aa + bb === 180) {\n    deg = 180 + cc;\n  } else if (aa + bb === 180) {\n    deg = 360 - cc || 360 - dd;\n  }\n  return deg >= 360 ? 0 : deg;\n};\n\nexport const parsePath = (path: string): string | string[] => {\n  const pathList = path.split('.');\n  return pathList.length === 1 ? pathList[0] : pathList;\n};\n\nexport const parsePoiter = (obj: any, poiter: string | string[]) => {\n  if (Array.isArray(poiter)) {\n    let res = obj;\n    for (let prop of poiter) {\n      res = res[prop];\n      if (!res) {\n        break;\n      }\n    }\n    return res;\n  }\n  return obj[poiter];\n};\n","import React from 'react';\n\nexport interface SongInfo {\n  id: string;\n  name: string;\n  picUrl: string;\n}\n\nexport interface RootState {\n  loading: boolean;\n  songInfo?: SongInfo;\n}\nexport const initState: RootState = {\n  loading: false,\n  songInfo: sessionStorage.songInfo ? JSON.parse(sessionStorage.songInfo) : void 0,\n};\n\nexport const reducer = (state: RootState, action: any): RootState => {\n  switch (action.type) {\n    case 'showLoading':\n      return { ...state, loading: true };\n    case 'hideLoading':\n      return { ...state, loading: false };\n    case 'setSongInfo':\n      return { ...state, songInfo: action.info };\n    default:\n      return state;\n  }\n};\n\nconst Store = React.createContext<{ state: any; dispatch: React.Dispatch<any> } | null>(null);\n\nexport default Store;\n","import React, { useContext } from 'react';\nimport { highlight, parsePath, parsePoiter, req } from '../../util';\nimport Store from '../../store';\n\nexport interface SongListProps {\n  /** 歌曲列表 */\n  songs: any[];\n  /** 是否显示排名 */\n  showRate?: boolean;\n  /** 排名最小长度，不足签名补零，默认为2，需要显示排名的时候才有用 */\n  rateMinLength?: number;\n  /** 排名前几才会标记红，默认为3，需要显示排名才有用 */\n  topRateMarked?: number;\n  /** 对象实行名，如果是二级属性以上，传 xx.xxx */\n  artists?: string;\n  /** 对象实行名，如果是二级属性以上，传 xx.xxx */\n  album?: string;\n  alias?: string;\n  /** 用于高亮的关键词 */\n  keyword?: string;\n  /** 歌曲点击回调函数 */\n  onSongClick?: (item: any) => void;\n}\n\n/**\n * 组件用于抽取 songlist 相同的部分\n */\nconst SongList = ({\n  songs,\n  showRate = false,\n  rateMinLength = 2,\n  topRateMarked = 3,\n  artists = 'artists',\n  album = 'album',\n  keyword = '',\n  onSongClick,\n  alias = 'alias',\n}: SongListProps) => {\n  const store = useContext(Store);\n  const dispatch = store!.dispatch;\n  const artistsPath = parsePath(artists);\n  const albumPath = parsePath(album);\n  const aliasPath = parsePath(alias);\n  /**\n   *\n   * @param item 歌曲的全部信息\n   * @paramartistsObj 艺术家信息\n   * @param aliasList 歌曲的别名信息\n   */\n  const onItemClick = async (item: any, artistsList: string[] = [], aliasList: string[]) => {\n    let name = item.name;\n    if (aliasList?.length) {\n      name += `（${aliasList.join('')}）`;\n    }\n    const artists = artistsList.join('/');\n    const songUrl: any = await req(`/song/url?id=${item.id}`);\n    const url = songUrl?.data[0]?.url || '';\n    if (!url) {\n      alert('无版权！请登录再试');\n    }\n    const [songInfo, lrcInfo] = await Promise.all([\n      req(`/song/detail?ids=${item.id}`),\n      req(`/lyric?id=${item.id}`),\n    ]);\n    const info = {\n      name,\n      artists,\n      id: item.id,\n      picUrl: songInfo?.songs[0]?.al?.picUrl || '',\n      songUrl: url,\n      lyric: lrcInfo?.lrc?.lyric,\n    };\n    sessionStorage.setItem('songInfo', JSON.stringify(info));\n    dispatch({ type: 'setSongInfo', info });\n    window.location.hash = `/play?id=${item.id}`;\n    if (typeof onSongClick === 'function') {\n      onSongClick(item);\n    }\n  };\n  const renderAuthorAlbum = (artistsList: string[], album: any): string => {\n    if (!artistsList || !artistsList.length) {\n      return '';\n    }\n    let str = '';\n    str += artistsList.join(' / ');\n    if (album) {\n      str += ' - ';\n      str += album.name;\n    }\n    if (!keyword) {\n      return str;\n    }\n    return highlight(str, keyword);\n  };\n  const renderRate = (idx: number) => {\n    if (!showRate) {\n      return null;\n    }\n    if (idx < topRateMarked) {\n      return (\n        <div className=\"new-songs-rate rate-top-marked\">\n          {(idx + 1).toString().padStart(rateMinLength, '0')}\n        </div>\n      );\n    }\n    return (\n      <div className=\"new-songs-rate\">{(idx + 1).toString().padStart(rateMinLength, '0')}</div>\n    );\n  };\n  const renderAlias = (aliasList: string[] | undefined) => {\n    if (!aliasList || !aliasList.length) {\n      return null;\n    }\n    return <span className=\"new-songs-alias\">({aliasList.join('')})</span>;\n  };\n  const renderSongs = () =>\n    songs.map((item: any, idx: number) => {\n      const artistsObj = parsePoiter(item, artistsPath);\n      const artistsList: string[] = artistsObj.map((i: any) => i.name);\n      const albumObj = parsePoiter(item, albumPath);\n      const aliasObj: string[] = parsePoiter(item, aliasPath);\n      return (\n        <div\n          className=\"new-songs-item\"\n          key={idx}\n          onClick={() => onItemClick(item, artistsList, aliasObj)}\n        >\n          {renderRate(idx)}\n          <div className=\"new-songs-info\">\n            {keyword ? (\n              <div\n                className=\"new-songs-title\"\n                dangerouslySetInnerHTML={{ __html: highlight(item.name, keyword) }}\n              ></div>\n            ) : (\n              <div className=\"new-songs-title\">\n                {item.name} {renderAlias(aliasObj)}\n              </div>\n            )}\n            {keyword ? (\n              <div\n                className=\"new-songs-extra\"\n                dangerouslySetInnerHTML={{ __html: renderAuthorAlbum(artistsList, albumObj) }}\n              ></div>\n            ) : (\n              <div className=\"new-songs-extra\">{renderAuthorAlbum(artistsList, albumObj)}</div>\n            )}\n          </div>\n          <div className=\"play-button\">\n            <span className=\"btn-icon\"></span>\n          </div>\n        </div>\n      );\n    });\n\n  if (!songs || !songs.length) {\n    return null;\n  }\n  return <section className=\"new-songs\">{renderSongs()}</section>;\n};\n\nexport default SongList;\n","import React, { useEffect, useState } from 'react';\nimport { req } from '../../util';\nimport SongList from '../songList';\n\nexport default () => {\n  const [newSongs, setNewSongs] = useState<any[]>([]);\n  const [songsList, setSongsList] = useState<any[]>([]);\n  useEffect(() => {\n    const fetchSongsList = async () => {\n      const res = await req('/personalized?limit=6');\n      if (res && res.result) {\n        setSongsList(res.result);\n      }\n    };\n    const fetchNewSongs = async () => {\n      const res = await req('/personalized/newsong');\n      if (res && res.result) {\n        setNewSongs(res.result);\n      }\n    };\n    fetchSongsList();\n    fetchNewSongs();\n  }, []);\n  const formatPlayCount = (count: number): string => {\n    const num = (count / 10000).toFixed(1);\n    return num + '万';\n  };\n  const clickPlayList = (id: string): void => {\n    window.location.hash = `/playList?id=${id}`;\n  };\n  const renderPlayList = () => {\n    return songsList.map(item => (\n      <div className=\"remd-li\" key={item.id} onClick={() => clickPlayList(item.id)}>\n        <div className=\"remd-img\">\n          <img src={item.picUrl} alt={item.name} className=\"u-img\" />\n          <span className=\"u-earp remd_lnum\">{formatPlayCount(item.playCount)}</span>\n        </div>\n        <div className=\"remd-text\">{item.name}</div>\n      </div>\n    ));\n  };\n  return (\n    <div className=\"recommend\">\n      <div className=\"remd-tl\">推荐歌单</div>\n      <section className=\"remd-songs\">\n        <div className=\"remd-list\">{renderPlayList()}</div>\n      </section>\n      <div className=\"remd-tl\">最新音乐</div>\n      <SongList\n        songs={newSongs}\n        artists=\"song.artists\"\n        album=\"song.album\"\n        alias=\"song.alias\"\n      ></SongList>\n    </div>\n  );\n};\n","import React, { useEffect, useState, useRef } from 'react';\nimport { req } from '../../util';\nimport SongList from '../songList';\n\nlet time: string = '';\n(() => {\n  const date = new Date();\n  const month = date.getMonth() + 1;\n  const day = date.getDate();\n  time = `${month.toString().padStart(2, '0')}月${day.toString().padStart(2, '0')}日`;\n})();\n\nconst observedElementStyle = { height: 1, width: '100vw' };\n\nexport default () => {\n  const observerTarget = useRef<HTMLDivElement>(null);\n  const [end, setEnd] = useState<number>(20);\n  const [songList, setSongList] = useState<any[]>([]);\n  const [, setAllSongs] = useState<any[]>([]);\n  // const onSongClick = (item: any) => {\n  //   console.log(item);\n  // };\n  const initObserver = async () => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          let songs: any[];\n          let currEnd: number = 0;\n          // 因为这个观察者是初始化第一个闭包的时候定义的\n          // 这里拿到的 allSongs 永远都是第一个闭包环境的值\n          // 所以要通过这种方式拿到最新的值\n          setAllSongs(list => {\n            songs = list;\n            return list;\n          });\n          setEnd(e => {\n            currEnd = e;\n            return e + 20;\n          });\n          setSongList(songs!.slice(0, currEnd));\n        }\n      });\n    });\n    if (observerTarget.current) {\n      observer.observe(observerTarget.current);\n    }\n  };\n  useEffect(() => {\n    const getSongList = async () => {\n      const res = await req('/top/list?idx=1&limit=20');\n      if (res && res.code === 200 && res.playlist && res.playlist.tracks) {\n        initObserver();\n        setAllSongs(res.playlist.tracks);\n        setSongList(res.playlist.tracks.slice(0, end));\n        setEnd(end + 20);\n      }\n    };\n    getSongList();\n    // 组件初始化的时候触发一次就好\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <div className=\"top\">\n      <section className=\"top-header\">\n        <div className=\"top-logo\"></div>\n        <div className=\"top-time\">更新时间：{time}</div>\n      </section>\n      <SongList songs={songList} artists=\"ar\" album=\"al\" alias=\"alia\" showRate></SongList>\n      <div ref={observerTarget} style={observedElementStyle}></div>\n    </div>\n  );\n};\n","import React, { useRef, useEffect } from 'react';\nimport { SearchConfig } from '.';\nimport SongList from '../songList';\n// import HighLight from 'react-highlight-words';\n// const types = ['artist', 'mv', 'album'];\n\nconst visible: React.CSSProperties = {};\nconst hidden: React.CSSProperties = { display: 'none' };\nexport interface SearchResultProps {\n  style?: React.CSSProperties;\n  result?: any;\n  /** 用于 html 高亮的关键词 */\n  keyword: string;\n  config: SearchConfig;\n  setOffsetConfig?: React.Dispatch<\n    React.SetStateAction<{\n      offset: number;\n      isScrollTrigger: boolean;\n    }>\n  >;\n}\n\nexport default function SearchResult({\n  style,\n  result,\n  keyword,\n  config,\n  setOffsetConfig,\n}: SearchResultProps) {\n  const divRef = useRef<HTMLDivElement>(null);\n  const isLoadingVisible = (): React.CSSProperties => {\n    if (!result.songs || config.isEnd) {\n      return hidden;\n    }\n    return visible;\n  };\n  const isNoResultVisible = (): React.CSSProperties => {\n    if (!result.songs || !config.isEnd) {\n      return hidden;\n    }\n    return visible;\n  };\n  // 组件加载完成，添加监视器\n  useEffect(() => {\n    const observer = new IntersectionObserver((entries: IntersectionObserverEntry[]) => {\n      if (divRef.current) {\n        entries.forEach(item => {\n          if (item.isIntersecting) {\n            if (typeof setOffsetConfig === 'function') {\n              setOffsetConfig({\n                offset: config.limit + config.offset,\n                isScrollTrigger: true,\n              });\n            }\n          }\n        });\n      }\n    });\n    if (divRef.current) {\n      observer.observe(divRef.current);\n    }\n    // 只需要开头触发一次就好，如果后续每次都创建一个观察者，内存泄漏警告\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <section className=\"search-result\" style={style}>\n      <SongList songs={result.songs} keyword={keyword}></SongList>\n      <div ref={divRef} style={isLoadingVisible()} className=\"label\">\n        加载中……\n      </div>\n      <div style={isNoResultVisible()} className=\"label\">\n        全部加载完\n      </div>\n    </section>\n  );\n}\n","import React, { useEffect, useState, useRef } from 'react';\nimport { Icon } from 'antd-mobile';\nimport { req } from '../../util';\nimport useDebounce from '../../util/hooks/debounce';\nimport Result from './result';\n\nexport interface SearchConfig {\n  limit: number;\n  offset: number;\n  count: number;\n  isEnd: boolean;\n}\n\nexport default () => {\n  // 用来计算搜索的次数，还有一个功能，\b如果搜索文字没有改变的话，不会触发 useEffect 搜索，通过这个改变强制触发搜索\n  const [searchCount, setCount] = useState(0);\n  // input 输入框\n  const searchBoxRef = useRef<HTMLInputElement>(null);\n  // input 输入框的值\n  const [text, setText] = useState('');\n  // 热门推荐搜索词\n  const [hotList, setHotList] = useState<any[]>([]);\n  // 是否是输入法输入\n  const [isCompositionInput, setIsCompositionInput] = useState(false);\n  // 搜索建议列表\n  const [suggest, setSuggest] = useState<any[]>([]);\n  // 是否是搜索建议列表\n  const [isSearchTips, setIsSearchTips] = useState(false);\n  // 是否是搜索结果页\n  const [isResultPage, setIsResultPage] = useState(false);\n  // 搜索的关键词，改变的话，会触发搜索\n  const [searchText, setSearchText] = useState('');\n  // 搜索结果\n  const [result, setResult] = useState<any>({});\n  // 历史记录\n  const [historyList, setHistoryList] = useState<string[]>([]);\n  /** 这两个变量合并到 offsetConfig 这个对象里面 */\n  // // 是否是下拉触发的搜索\n  // const [isScrollTrigger, setIsScrollTrigger] = useState(false);\n  // // 搜索的偏移\n  // const [offset, setOffset] = useState(0);\n  /** 发现如果 effect 同时依赖 isScrollTrigger offset 的时候，会由于改变这两个值的触发器在子组件，会导致触发两次 effect */\n  const [offsetConfig, setOffsetConfig] = useState({\n    offset: 0,\n    isScrollTrigger: false,\n  });\n  // 防抖的 text，用于输入防抖\n  const debounceText = useDebounce(text);\n  // 搜索配置\n  const searchConfig = useRef<SearchConfig>({\n    limit: 20,\n    offset: 0,\n    count: 0,\n    isEnd: false,\n  });\n  const textChange = (e: React.SyntheticEvent) => {\n    const val = (e.target as HTMLInputElement).value;\n    if (!isCompositionInput) {\n      setText(val);\n    }\n  };\n  const inputBegin = () => {\n    setIsCompositionInput(true);\n  };\n  const inputEnded = (e: React.SyntheticEvent) => {\n    const val = (e.target as HTMLInputElement).value;\n    setText(val);\n    setIsCompositionInput(false);\n  };\n  const recordSearchHistory = (songName: string) => {\n    window.setTimeout(() => {\n      const idx = historyList.indexOf(songName);\n      if (idx !== -1) {\n        historyList.splice(idx, 1);\n      }\n      historyList.unshift(songName);\n      sessionStorage.setItem('history', historyList.toString());\n      setHistoryList([...historyList]);\n    }, 0);\n  };\n  const search = (e: React.SyntheticEvent) => {\n    const which: number = (e as any).which;\n    if (which === 13) {\n      const val = (e.target as HTMLInputElement).value;\n      setSearchText(val);\n      setCount(c => c + 1);\n      setOffsetConfig({\n        offset: 0,\n        isScrollTrigger: false,\n      });\n      searchBoxRef.current!.blur();\n      recordSearchHistory(val);\n    }\n  };\n  const clickHeadItem = () => {\n    setSearchText(text);\n    setCount(c => c + 1);\n    setOffsetConfig({\n      offset: 0,\n      isScrollTrigger: false,\n    });\n    searchBoxRef.current!.blur();\n    recordSearchHistory(text);\n  };\n  const clickItem = (e: React.SyntheticEvent) => {\n    const innerText = (e.target as HTMLLIElement).innerText;\n    searchBoxRef.current!.value = innerText;\n    setText(innerText);\n    setSearchText(innerText);\n    setCount(c => c + 1);\n    setOffsetConfig({\n      offset: 0,\n      isScrollTrigger: false,\n    });\n    searchBoxRef.current!.blur();\n    recordSearchHistory(innerText);\n  };\n  const suggestList = () => {\n    if (!suggest.length) {\n      return null;\n    }\n    return suggest.map((item: any, index: number) => (\n      <li className=\"tip\" key={index} onClick={clickItem}>\n        <Icon type=\"search\" size=\"xs\" className=\"icon\" />\n        <div className=\"tip-content\">{item.keyword}</div>\n      </li>\n    ));\n  };\n  const clickHot = (e: React.SyntheticEvent) => {\n    const innerText = (e.target as HTMLLIElement).innerText;\n    searchBoxRef.current!.value = innerText;\n    setText(innerText);\n    setSearchText(innerText);\n    setCount(c => c + 1);\n    setOffsetConfig({\n      offset: 0,\n      isScrollTrigger: false,\n    });\n    recordSearchHistory(innerText);\n  };\n  const inputFocus = () => {\n    setIsResultPage(false);\n    // setNoNeepSuggest(false);\n    setIsSearchTips(true);\n  };\n  const inputBlur = () => {\n    if (!text) {\n      setIsSearchTips(false);\n    }\n  };\n  const clearInput = () => {\n    setText('');\n    setIsSearchTips(false);\n    setIsResultPage(false);\n    searchBoxRef.current!.value = '';\n  };\n  const clearIconVisible = (): React.CSSProperties => {\n    if (!text) {\n      return { visibility: 'hidden' };\n    }\n    return { visibility: 'visible' };\n  };\n  const holderVisible = (): React.CSSProperties => {\n    if (text || isCompositionInput) {\n      return { visibility: 'hidden' };\n    }\n    return { visibility: 'visible' };\n  };\n  useEffect(() => {\n    const getHotList = async () => {\n      const res = await req('/search/hot');\n      if (res && res.result && res.result.hots) {\n        setHotList(res.result.hots);\n      }\n    };\n    getHotList();\n  }, []);\n  useEffect(() => {\n    const history = localStorage.getItem('history');\n    if (history) {\n      setHistoryList(history.split(','));\n    }\n  }, []);\n  useEffect(() => {\n    const getSeggest = async () => {\n      const res = await req(`/search/suggest?keywords=${debounceText}&type=mobile`);\n      if (res && res.result && res.result.allMatch) {\n        setSuggest(res.result.allMatch);\n      } else {\n        setSuggest([]);\n      }\n    };\n    // 这里由于 debounceText 是延时改变的，如果直接搜索进入结果页面，这个值才改变，这会导致这里重新触发一次\n    // 但是如果加入 isResultPage 判定, isResultPage 改变的时候也会触发这个，就会导致点删除掉输入框的时候，也会触发一次这个函数\n    if (debounceText && !isResultPage) {\n      setIsSearchTips(true);\n      getSeggest();\n    } else {\n      setIsSearchTips(false);\n    }\n    // 删掉 isResultPage，避免上面注释的情况\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debounceText]);\n  useEffect(() => {\n    const getResult = async () => {\n      const res = await req(\n        `/search?limit=${searchConfig.current.limit}&keywords=${searchText}&offset=${searchConfig.current.offset}`\n      );\n      if (res && res.result) {\n        let isEnd = false;\n        const count = res.result.songCount;\n        const songListCount = res.result.songs.length;\n        if (!count || songListCount + searchConfig.current.offset >= count) {\n          isEnd = true;\n        }\n        searchConfig.current.count = count;\n        searchConfig.current.isEnd = isEnd;\n        if (!offsetConfig.isScrollTrigger) {\n          setResult(res.result);\n        } else {\n          const { songs } = result;\n          const handledSongs = [...songs, ...res.result.songs];\n          const handledResult = { ...result, songs: handledSongs };\n          setResult(handledResult);\n        }\n        // setIsResultPage(true);\n        // setNoNeepSuggest(false);\n      }\n    };\n    if (searchText) {\n      // 不是下拉触发的的搜索，重置搜索配置\n      if (!offsetConfig.isScrollTrigger) {\n        searchConfig.current.limit = 20;\n        searchConfig.current.offset = 0;\n        searchConfig.current.count = 0;\n        searchConfig.current.isEnd = false;\n        setIsResultPage(true);\n        setResult({});\n      } else {\n        searchConfig.current.offset = offsetConfig.offset;\n      }\n      getResult();\n    }\n    // 这里如果设定了依赖 result，后果很严重\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchText, searchCount, offsetConfig]);\n  return (\n    <div className=\"search-page\">\n      <section className=\"input-box\">\n        <div className=\"input-cover\">\n          <Icon type=\"search\" size=\"xxs\" className=\"search-icon\" />\n          <label className=\"placeholder\" style={holderVisible()}>\n            搜索歌曲、歌手、专辑\n          </label>\n          <input\n            type=\"search\"\n            name=\"search\"\n            className=\"input-content\"\n            autoComplete=\"off\"\n            onChange={textChange}\n            onCompositionStart={inputBegin}\n            onCompositionEnd={inputEnded}\n            onKeyUp={search}\n            onBlur={inputBlur}\n            onFocus={inputFocus}\n            defaultValue={text}\n            ref={searchBoxRef}\n            // 不能绑定 value，因为 onChange 如果没法改变 value 的话，会有无法输入的情况，\n            // 中文的情况会导致这种情况\n            // value\n          ></input>\n          <Icon\n            type=\"cross-circle-o\"\n            className=\"clear-icon\"\n            size=\"xxs\"\n            onClick={clearInput}\n            style={clearIconVisible()}\n          ></Icon>\n        </div>\n      </section>\n      <section style={{ display: isResultPage ? 'none' : 'block' }}>\n        <section className=\"search-tip\" style={{ display: isSearchTips ? 'block' : 'none' }}>\n          <section className=\"search-info\" onClick={clickHeadItem}>\n            搜索“{text}”\n          </section>\n          <ul className=\"tips\">{suggestList()}</ul>\n        </section>\n        <section className=\"search-default\" style={{ display: isSearchTips ? 'none' : 'block' }}>\n          <div className=\"search-hot\">\n            <div className=\"title\">热门搜索</div>\n            <ul className=\"list\">\n              {hotList.map(item => (\n                <li className=\"list-item\" key={item.first} onClick={clickHot}>\n                  {item.first}\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div className=\"search-history\">\n            <ul className=\"list\">\n              {historyList.map((item: string, idx: number) => (\n                <li className=\"list-item\" onClick={clickItem} key={idx}>\n                  <Icon type=\"right\" size=\"xs\" className=\"icon prefix-icon\" />\n                  <span className=\"item-content\">{item}</span>\n                  <Icon type=\"cross\" size=\"xs\" className=\"icon suffix-icon\" />\n                </li>\n              ))}\n            </ul>\n          </div>\n        </section>\n      </section>\n      <Result\n        config={searchConfig.current}\n        style={{ display: isResultPage ? 'block' : 'none' }}\n        result={result}\n        keyword={searchText}\n        setOffsetConfig={setOffsetConfig}\n      ></Result>\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\n\nexport default function useDebounce<T>(value: T, delay: number = 300): T {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Set debouncedValue to value (passed in) after the specified delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Return a cleanup function that will be called every time ...\n      // ... useEffect is re-called. useEffect will only be re-called ...\n      // ... if value changes (see the inputs array below).\n      // This is how we prevent debouncedValue from changing if value is ...\n      // ... changed within the delay period. Timeout gets cleared and restarted.\n      // To put it in context, if the user is typing within our app's ...\n      // ... search box, we don't want the debouncedValue to update until ...\n      // ... they've stopped typing for more than 500ms.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    // Only re-call effect if value changes\n    // You could also add the \"delay\" var to inputs array if you ...\n    // ... need to be able to change that dynamically.\n    [value, delay]\n  );\n\n  return debouncedValue;\n}\n","import React from 'react';\nimport { Tabs } from 'antd-mobile';\nimport Recommend from '../components/recommend';\nimport Top from '../components/top';\nimport Search from '../components/search';\n\nconst tabs = [{ title: '推荐音乐' }, { title: '热歌榜' }, { title: '搜索' }];\nexport default () => {\n  return (\n    <Tabs tabs={tabs}>\n      <Recommend></Recommend>\n      <Top></Top>\n      <Search></Search>\n    </Tabs>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { req, parseHashParam } from '../../util';\nimport { Icon } from 'antd-mobile';\nimport './playList.less';\nimport SongList from '../songList';\n\nconst PlayList = () => {\n  const [id, setId] = useState<string | null>('');\n  const [res, setRes] = useState<any>({});\n  const [isFolded, setIsFolded] = useState<boolean>(true);\n  const renderIntroDtl = () => {\n    if (!res.description) {\n      return null;\n    }\n    const strArr: string[] = res.description.split('\\n');\n    return strArr.map((str: string, idx: number) => (\n      <span key={idx}>\n        {idx ? str : '简介：' + str}\n        <br />\n      </span>\n    ));\n  };\n  const changeFold = () => {\n    setIsFolded(i => !i);\n  };\n  const foldClassName = () => (isFolded ? 'intro-dtl line-3' : 'intro-dtl');\n  const formatPlayCount = (count: number): string => {\n    if (!count) {\n      return '0.0万';\n    }\n    const num = (count / 10000).toFixed(1);\n    return num + '万';\n  };\n  useEffect(() => {\n    const playListId = parseHashParam('id');\n    setId(playListId);\n  }, []);\n  useEffect(() => {\n    const getDetail = async () => {\n      const result = await req(`/playlist/detail?id=${id}&s=0`);\n      setRes(result?.playlist);\n    };\n    if (id) {\n      getDetail();\n    }\n  }, [id]);\n  return (\n    <div id=\"play-list\">\n      <section id=\"play-list-header\">\n        <section\n          className=\"play-list-bg\"\n          style={{ backgroundImage: `url(${res.coverImgUrl})` }}\n        ></section>\n      </section>\n      <section id=\"play-list-detail\">\n        <div className=\"cover\" style={{ backgroundImage: `url(${res.coverImgUrl})` }}>\n          <span className=\"list-icon\">歌单</span>\n          <span className=\"list-play-count\">{formatPlayCount(res.playCount)}</span>\n        </div>\n        <div className=\"play-list-info\">\n          <div className=\"play-list-name line-2\">{res.name}</div>\n          <div className=\"play-list-author\">\n            <div\n              className=\"avatar\"\n              style={{ backgroundImage: `url(${res.creator?.avatarUrl})` }}\n            ></div>\n            <span className=\"author-name\">{res.creator?.nickname}</span>\n          </div>\n        </div>\n      </section>\n      <section id=\"play-list-intro\">\n        <div className=\"play-list-tags\">\n          标签：\n          {res.tags &&\n            res.tags.map((item: string) => (\n              <div key={item} className=\"play-list-tag\">\n                {item}\n              </div>\n            ))}\n        </div>\n        <div className=\"intro-dtl-box\">\n          <div className={foldClassName()}>{renderIntroDtl()}</div>\n          {isFolded ? (\n            <Icon type=\"down\" className=\"icon-btn\" size=\"xs\" onClick={changeFold} />\n          ) : (\n            <Icon type=\"up\" className=\"icon-btn\" size=\"xs\" onClick={changeFold} />\n          )}\n        </div>\n      </section>\n      <h3 className=\"title\">歌曲列表</h3>\n      <SongList songs={res.tracks} artists=\"ar\" album=\"al\" alias=\"alia\" showRate></SongList>\n    </div>\n  );\n};\n\nexport default PlayList;\n","import React from 'react';\n\n/**\n * 进度条组件\n * @param param0\n */\nconst Progress = ({ current, duration }: { current: number; duration: number }) => {\n  const percent = ((current / duration) * 100).toFixed(2);\n  const mouseOver = (e: any) => {\n    console.log('over');\n  };\n  const mouseMove = (e: any) => {\n    console.log('move');\n  };\n  const click = (e: any) => {\n    console.log('click');\n  };\n  return (\n    <div className=\"progress\" onMouseOver={mouseOver} onMouseMove={mouseMove} onClick={click}>\n      <div className=\"finish\" style={{ width: `${percent}%` }}></div>\n      <i className=\"dot\"></i>\n    </div>\n  );\n};\n\nexport default Progress;\n","import React, { useState, useRef, useContext } from 'react';\nimport Progress from './progress';\nimport { matrix2Deg } from '../../util';\nimport Store from '../../store';\nimport './play.less';\n\nconst Play = () => {\n  const store = useContext(Store);\n  const state = store!.state;\n  const [parsed, setParsed] = useState<boolean>(false);\n  /** 用于控制圆盘是否转动，播放的时候圆盘是转动的，暂停的时候不是 */\n  const [imgClass, setImgClass] = useState('song-img');\n  /** 上次暂停停止的角度，默认是0 */\n  const [lastDeg, setLastDeg] = useState<number>(0);\n  /** Audio 标签的引用 */\n  const audioTag = useRef<HTMLAudioElement | null>(null);\n  /** 下一个歌词所在行 */\n  const nextLrc = useRef<HTMLDivElement | null>(null);\n  /** 歌曲长度 */\n  const [duration, setDuration] = useState<number | undefined>(void 0);\n  /** 当前播放时间 */\n  const [current, setCurrent] = useState<number>(0);\n  const [scrollTranslate, setScrollTranslate] = useState<number>(0);\n  const picStyle = { backgroundImage: `url(${state.songInfo.picUrl})` };\n  /**\n   * 切换播放和暂停状态\n   */\n  const toggle = () => {\n    if (audioTag.current!.paused) {\n      setImgClass('song-img circling');\n      audioTag.current!.play();\n      setParsed(false);\n    } else {\n      setImgClass('song-img');\n      const imgTag = document.querySelector<HTMLDivElement>('.song-img');\n      const rollTag = document.querySelector<HTMLDivElement>('.song-roll-wrap');\n      const eleTransform = window.getComputedStyle(imgTag!).transform;\n      const matrix = eleTransform.match(/-?(\\d+\\.?\\d*)/g);\n      const matrixParams = [].slice.call(matrix!, 0, 4).map(Number);\n      const offsetDeg = matrix2Deg(\n        matrixParams[0],\n        matrixParams[1],\n        matrixParams[2],\n        matrixParams[3]\n      );\n      const deg = offsetDeg + lastDeg;\n      const finalDeg = deg >= 360 ? deg - 360 : deg;\n      setLastDeg(finalDeg);\n      rollTag!.style.transform = eleTransform;\n      audioTag.current!.pause();\n      setParsed(true);\n    }\n  };\n  /**\n   * 音频准备完成\n   */\n  const audioReady = () => {\n    setImgClass('song-img circling');\n    const dur = audioTag.current?.duration;\n    setDuration(dur);\n    const lyric: string = state.songInfo.lyric;\n    if (lyric) {\n      const firstLrc = document.querySelector<HTMLDivElement>('.lrc-item');\n      firstLrc!.style.color = 'white';\n      const nextEle = firstLrc!.nextElementSibling;\n      nextLrc.current = nextEle as HTMLDivElement | null;\n    }\n  };\n  /**\n   * audio 的时间更新事件，用于动态更新歌词\n   * @param e React的合成事件\n   */\n  const timeUpdate = (e: React.SyntheticEvent) => {\n    const currentTime = (e.target as HTMLAudioElement).currentTime;\n    let nextLrcTime = nextLrc.current?.getAttribute('data-timeline');\n    if (nextLrcTime) {\n      const compareTime = Number(nextLrcTime);\n      // 因为动画有 .3秒，所以不能等时间线到的时候才滚歌曲，会有延迟的感觉\n      if (compareTime - currentTime <= 0.3) {\n        const ele = nextLrc.current!;\n        const prevEle = ele.previousElementSibling as HTMLDivElement;\n        const height = prevEle.offsetHeight;\n        prevEle.style.color = null;\n        ele.style.color = 'white';\n        const nextEle = ele.nextElementSibling as HTMLDivElement | null;\n        nextLrc.current = nextEle;\n        setScrollTranslate(x => x + height);\n      }\n    }\n    setCurrent(currentTime);\n  };\n  const renderLyric = () => {\n    const lyric: string = state.songInfo.lyric;\n    if (!lyric) {\n      return null;\n    }\n    const lyricList = lyric\n      .split('\\n')\n      .slice(0, -1)\n      .map(i => {\n        const item = i.split(']');\n        const time = item[0].slice(1);\n        const [min, sec] = time.split(':').map(Number);\n        const totalSec = (min * 60 + sec).toFixed(3);\n        return [totalSec, item[1].trim()];\n      });\n    return lyricList.map((i: string[], idx: number) =>\n      i[1] ? (\n        <div className=\"lrc-item\" data-timeline={i[0]} key={idx}>\n          {i[1]}\n        </div>\n      ) : (\n        <div className=\"lrc-item\" data-timeline={i[0]} key={idx}>\n          &nbsp;\n        </div>\n      )\n    );\n  };\n\n  return (\n    <section className=\"play\" onClick={toggle}>\n      <section className=\"recorder\"></section>\n      <section className=\"play-bg\" style={picStyle}></section>\n      <section className=\"play-zone\">\n        <div className=\"song-disc\">\n          <div className=\"song-roll-wrap\" style={{ transform: `rotate(${lastDeg}deg)` }}>\n            <div className={imgClass} style={picStyle}></div>\n          </div>\n          <div className=\"parse-icon\" style={{ display: parsed ? undefined : 'none' }}></div>\n        </div>\n        <div className=\"song-info\">\n          <div className=\"song-title\">\n            <span className=\"song-name\">{state.songInfo.name}</span>\n            <span className=\"song-gap\">-</span>\n            <span className=\"artists\">{state.songInfo.artists}</span>\n          </div>\n          <div className=\"lyric\">\n            <div className=\"song-scroll\" style={{ transform: `translateY(-${scrollTranslate}px)` }}>\n              {renderLyric()}\n            </div>\n          </div>\n        </div>\n        <div className=\"progress-bar\">\n          <Progress current={current} duration={duration!}></Progress>\n        </div>\n      </section>\n      {state.songInfo.songUrl && (\n        <audio\n          src={state.songInfo.songUrl}\n          autoPlay\n          ref={audioTag}\n          onCanPlay={audioReady}\n          onTimeUpdate={timeUpdate}\n        ></audio>\n      )}\n    </section>\n  );\n};\n\nexport default Play;\n","import React, { useEffect, useState, useReducer } from 'react';\nimport FixHeader from './header';\nimport Tabs from './header/tabs';\nimport PlayList from './components/recommend/playList';\nimport Play from './components/play';\nimport './index.less';\nimport Store, { reducer, initState } from './store';\n\nconst App: React.FC = () => {\n  const [state, dispatch] = useReducer(reducer, initState);\n  const [page, setPage] = useState('/');\n  const jump = () => {\n    const { location } = window;\n    const { hash } = location;\n    if (hash.includes('/playList')) {\n      setPage('/playList');\n    } else if (hash.includes('/play')) {\n      setPage('/play');\n    } else {\n      setPage('/');\n    }\n  };\n  const renderPage = () => {\n    switch (page) {\n      case '/playList':\n        return <PlayList />;\n      case '/play':\n        return <Play />;\n      case '/':\n      default:\n        return (\n          <>\n            <FixHeader />\n            <main id=\"main\">\n              <Tabs />\n            </main>\n          </>\n        );\n    }\n  };\n  useEffect(() => {\n    jump();\n    window.addEventListener(\n      'hashchange',\n      () => {\n        jump();\n      },\n      false\n    );\n  }, []);\n  return (\n    <div className=\"App\">\n      <Store.Provider value={{ state, dispatch }}>{renderPage()}</Store.Provider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}